@{
    ViewData["Title"] = "Home Page";
    //bool searched = false;
}

@model IDAO_Impl

<div class="container">
    <div class="row justify-content-between">
        @using (Html.BeginForm("ShowEntries", "Home", FormMethod.Post))
        {
            @*<input list="entries" name="entry" placeholder="Show entries">
            <datalist id="entries">
                <option value="5"/>
                <option value="10"/>
                <option value="20"/>
                <option value="Show all!"/>
            </datalist>
            <input type="submit" value="Show!">*@
            <div class="input-group">
                <input list="entries" type="text" class="form-control" name="entry" placeholder="Show Entries">
                <datalist id="entries">
                    <option value="5"/>
                    <option value="10"/>
                    <option value="20"/>
                    <option value="Show all!"/>
                </datalist>
                <span class="input-group-btn">
                    <button class="btn btn-light" type="submit">Show!</button>
                </span>
            </div>

        }
        <div class="float-right">
            @using (Html.BeginForm("Search", "Home", FormMethod.Get))
            {
                @*<input class="form-control" type="text" name="search" placeholder="Search by title/description..." value="@Model.SearchText" size="25">*@
                @*<span class="float-right"><input class="btn btn-light" type="submit" value="Search!"></span>*@
                <div class="input-group">
                    <input type="text" class="form-control" name="search" placeholder="Search by title/description..." value="@Model.SearchText" size="25">
                    <span class="input-group-btn">
                        <button class="btn btn-light" type="submit">Search!</button>
                    </span>
                </div>
            }
        </div>
    </div>
</div>

<br>
<table class="table table-striped">
    <thead class="table-dark">
        <tr>
            @using (Html.BeginForm("Sorting", "Home", FormMethod.Post))
            {
                <th class="th-sm text-center">
                    <button class="btn btn-outline-warning" type="submit" name="order" value="id">#ID</button>
                </th>
                <th class="th-sm text-center">
                    <button class="btn btn-outline-warning" disabled>Tags</button>
                </th>
                <th class="th-sm text-center">
                    <button class="btn btn-outline-warning" type="submit" name="order" value="title">Title</button>
                </th>
                <th class="th-sm text-center">
                    <button class="btn btn-outline-warning" type="submit" name="order" value="submission_time">Submission time</button>
                </th>
                <th class="th-sm text-center">
                    <button class="btn btn-outline-warning" type="submit" name="order" value="view_number">Views</button>
                </th>
                <th class="text-center">
                    <button class="btn btn-outline-warning" type="submit" name="order" value="vote_number">Votes</button>
                </th>
                
                <th class="text-center">
                    <button class="btn btn-outline-warning" disabled>Actions</button>
                </th>
                
            }
        </tr>
    </thead>

    @foreach (QuestionModel question in Model.GetEntries())
    {
        <tr>
            <td class="text-center">
                @Html.DisplayFor(modelItem => question.Id)
            </td>

            <td class="text-center">
                @if(question.tagNames.Count > 0)
                {
                    foreach(string name in question.tagNames)
                    {
                        <span class="badge badge-info badge-pill">@name</span>
                    }
                }
                else { <span>No Tags</span>}
            </td>

            <td class="text-center">
                @Html.ActionLink(question.Title, "question", new { id = question.Id })
            </td>

            <td class="text-center">
                <a>@question.GetDate()</a>
            </td>

            <td class="text-center">
                @Html.DisplayFor(modelItem => question.Views)
            </td>

            <td class="text-center">
                <span class="badge badge-primary badge-pill">@question.Vote</span>
            </td>
            @if (User.Identity.IsAuthenticated && Model.GetUserById(question.User_Id).Equals(Model.GetUserByEmail(User.Claims.First().Value)))
            {
                <td class="text-center">
                    @Html.ActionLink("Edit", "edit", new { id = question.Id }, new { @class = "text-success" }) |
                    <a href="#" class="text-danger" id="ModalId" onclick="viewModal(@question.Id)">Delete</a>
                </td>
            }
            else
            {
                <td class="text-center">
                    <p class="text-danger">You have no power here!</p>
                </td>
            }
        </tr>
    }
</table>
<!--MAIN TABLE-->
<!--DELETE MODAL-->
<div class="container">
    <div class="modal" id="MyModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content" id="showresults">
                
            </div>
        </div>
    </div>
</div>
<!--DELETE MODAL-->
<!--DELETE MODAL AJAX-->
@section Scripts{
    <script>
    function viewModal(id) {
        $.ajax({
            type: 'Get',
            url: '/Home/ModalId/' + id,//urlem
            success: function (result) {
                $("#MyModal").modal();//open modal
                $('#showresults').html(result);//put view to modal

            }
        })
    }
    </script>
}
<!--DELETE MODAL AJAX-->